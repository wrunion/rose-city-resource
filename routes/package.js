const keys = require("../config/nodeKeys")
const { Client } = require('pg');

/*
  ISSUE-10 WORK IN PROGRESS
  TODO: this comment can be removed once no longer needed
  Original data source (Northwest Open Data Exchange) which returns JSON:
  https://opendata.imspdx.org/api/3/action/package_show?id=592c18db-efa6-44c6-8477-4ffa4103ba94
*/

module.exports = (app) => {
  app.get("/api/package", async (req, res) => {

    // Source the connection string from environment variables
    // Heroku updates these variables when it makes changes (and this information WILL change)
    // TODO: we can probably just use process.env.DATABASE_URL
    const connectionString = `postgresql://${process.env.DB_USER}:${process.env.DB_PASSWORD}@${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_DATABASE}`;

    // Connect to the database
    let client = new Client({
      connectionString: connectionString, ssl: { rejectUnauthorized: false }
    });
    await client.connect();

    // Pull the listing table and parse into JSON
    client.query('SELECT last_update from public.meta;', async (sqlerr, sqlres) => {
      if (sqlerr) { /* TODO: remove res.send() for production and log instead */ await res.send(sqlerr); client.end(); return; }

      // This is just a copy of the JSON returned from NODE with result.metadata_modified updated
      // TODO: maybe just return metadata_modified. Doesn't look like the client uses the other data.
      const metadata_modified = sqlres.rows[0]['last_update']
      let json = {"help": "https://opendata.imspdx.org/api/3/action/help_show?name=package_show", "success": true, "result": {"license_title": "Creative Commons Non-Commercial (Any)", "maintainer": "Tim Hitchins", "relationships_as_object": [], "private": false, "maintainer_email": "tim@mappingaction.org", "num_tags": 0, "id": "592c18db-efa6-44c6-8477-4ffa4103ba94", "metadata_created": "2020-09-13T18:29:34.369516", "metadata_modified": metadata_modified, "author": "Mapping Action Collective", "author_email": "", "state": "active", "version": "1.0", "creator_user_id": "abc25323-6240-4532-a0c8-a69bec761384", "type": "dataset", "resources": [{"cache_last_updated": null, "package_id": "592c18db-efa6-44c6-8477-4ffa4103ba94", "datastore_contains_all_records_of_source_file": true, "datastore_active": true, "id": "61cee891-7d0f-4ebe-b8ea-c0c8d6cb27e7", "size": null, "original_url": "https://opendata.imspdx.org/dataset/592c18db-efa6-44c6-8477-4ffa4103ba94/resource/61cee891-7d0f-4ebe-b8ea-c0c8d6cb27e7/download/rcr-listings-2020-09-22.csv", "resource_id": "61cee891-7d0f-4ebe-b8ea-c0c8d6cb27e7", "set_url_type": "False", "state": "active", "ignore_hash": "False", "hash": "", "description": "The _Service Listings_ resource contains a structured version of\n                the service listings found in the print version of the Street Roots Rose City Resource.\n                All service listings provided with a full address include additional geographic information\n                in the form of lon/lat coordinates and associated neighborhood (where applicable). Confidential\n                locations, telephone support services, and listings without a provided address exclude additional\n                geographic information. Refer to the _Field Dictionary_ resource for details regarding each of the\n                fields in this resource. An additional _Phone_ resource is also available in the dataset and\n                can be joined to the Service Listing resource.", "format": "CSV", "mimetype_inner": null, "url_type": "upload", "mimetype": null, "cache_url": null, "name": "Service Listings", "created": "2020-09-13T18:30:04.580758", "url": "https://opendata.imspdx.org/dataset/592c18db-efa6-44c6-8477-4ffa4103ba94/resource/61cee891-7d0f-4ebe-b8ea-c0c8d6cb27e7/download/rcr-listings-2020-09-22.csv", "ckan_url": "https://opendata.imspdx.org", "task_created": "2020-09-22 18:08:21.743326", "last_modified": "2020-09-22T18:08:21.036417", "position": 0, "revision_id": "bda728e3-0373-4afe-a448-d5d9f7bef9f2", "resource_type": null}, {"cache_last_updated": null, "package_id": "592c18db-efa6-44c6-8477-4ffa4103ba94", "datastore_contains_all_records_of_source_file": true, "datastore_active": true, "id": "4407461b-e99d-4d8e-8a44-18483aa8d13c", "size": null, "original_url": "https://opendata.imspdx.org/dataset/592c18db-efa6-44c6-8477-4ffa4103ba94/resource/4407461b-e99d-4d8e-8a44-18483aa8d13c/download/rcr-phone-2020-09-22.csv", "resource_id": "4407461b-e99d-4d8e-8a44-18483aa8d13c", "set_url_type": "False", "state": "active", "ignore_hash": "False", "hash": "", "description": "The _Phone_ resource includes all the related,\n                                 joinable phone numbers of the service listings found in the _Service Listings_ resource.", "format": "CSV", "mimetype_inner": null, "url_type": "upload", "mimetype": null, "cache_url": null, "name": "Phone", "created": "2020-09-13T18:30:05.929041", "url": "https://opendata.imspdx.org/dataset/592c18db-efa6-44c6-8477-4ffa4103ba94/resource/4407461b-e99d-4d8e-8a44-18483aa8d13c/download/rcr-phone-2020-09-22.csv", "ckan_url": "https://opendata.imspdx.org", "task_created": "2020-09-22 18:08:28.332127", "last_modified": "2020-09-22T18:08:23.840852", "position": 1, "revision_id": "601a7092-03d7-4f71-a018-4ade180572ca", "resource_type": null}, {"mimetype": null, "cache_url": null, "hash": "", "description": "", "name": "RCR Geo Data", "created": "2020-09-13T18:30:07.647643", "url": "https://opendata.imspdx.org/dataset/592c18db-efa6-44c6-8477-4ffa4103ba94/resource/9023f4f4-4299-44e1-9eab-2ebc39eae3dc/download/rcr-listings-2020-09-22.geojson", "datastore_active": false, "format": "GeoJSON", "package_id": "592c18db-efa6-44c6-8477-4ffa4103ba94", "id": "9023f4f4-4299-44e1-9eab-2ebc39eae3dc", "cache_last_updated": null, "state": "active", "mimetype_inner": null, "last_modified": "2020-09-22T18:08:25.660995", "position": 2, "revision_id": "601a7092-03d7-4f71-a018-4ade180572ca", "url_type": "upload", "datastore_contains_all_records_of_source_file": false, "resource_type": null, "size": null}], "num_resources": 3, "tags": [], "groups": [], "license_id": "cc-nc", "relationships_as_subject": [], "organization": {"description": "The Mapping Action Collective is a data-visualization, and data analysis collective that uses Geographic Information Systems (GIS) to support grassroots organizations and individuals working towards social justice and community resilience.  \r\n\r\nWe support these groups by helping them analyze and visualize their data with a strong emphasis on collaboration rather than dictation.  \r\n\r\nOur group is a forum to support publicly accessible data and software and develop a framework for how GIS can be used a tool of empowerment for community organizations and\r\nsocial movements.", "created": "2018-07-31T19:09:48.767331", "title": "Mapping Action Collective", "name": "mapping-action-collective", "is_organization": true, "state": "active", "image_url": "2018-10-09-190959.185126Artboard-1MACnew2.svg", "revision_id": "215c76f2-4292-41b3-9e07-b951aea585eb", "type": "organization", "id": "48a67749-a421-4a75-b4f6-75856fc864af", "approval_status": "approved"}, "name": "rose-city-resource-wildfire-assistance", "isopen": false, "url": "", "notes": "# General Information\r\n                      This dataset contains a structured digital version of the Street Roots Rose City Resource (RCR),\r\n                      a small paper guide that is the most comprehensive, updated list of services for people experiencing\r\n                      homelessness and poverty in Multnomah and Washington counties. More than 160,000 guides are published\r\n                      annually by Street Roots and distributed to more than 250 organizations and entities in the Portland region.\r\n                      More information about the RCR can be found at http://streetroots.org/about/work/resourceguide.", "owner_org": "48a67749-a421-4a75-b4f6-75856fc864af", "extras": [], "license_url": "http://creativecommons.org/licenses/by-nc/2.0/", "title": "Rose City Resource - Wildfire Assistance Dev", "revision_id": "38765770-8e7e-40e5-aaa8-ad1c95303a3a"}};
      
      // Return JSON to the client
      await res.json(json);
      await client.end();
    })
  });
};